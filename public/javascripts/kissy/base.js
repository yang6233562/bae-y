KISSY.add("waterfall/base",function(S,Node,Base){var $=Node.all,win=S.Env.host,RESIZE_DURATION=50;function Waterfall(){var self=this;Waterfall.superclass.constructor.apply(self,arguments);var onResize=self.__onResize=S.buffer(doResize,RESIZE_DURATION,self);doResize.call(self);$(win).on("resize",onResize);}
function timedChunk(items,process,context,callback){var stopper={},timer,todo;function start(){todo=[].concat(S.makeArray(items));if(todo.length>0){(function(){var start=+new Date();do{var item=todo.shift();process.call(context,item);}while(todo.length>0&&(+new Date()-start<50));if(todo.length>0){timer=setTimeout(arguments.callee,25);}else{callback&&callback.call(context,items);}})();}else{callback&&callback.call(context,items);}}
stopper.stop=function(){if(timer){clearTimeout(timer);todo=[];items.each(function(item){item.stop();});}};stopper.start=start;return stopper;}
Waterfall.ATTRS={container:{setter:function(v){return $(v);}},align:{value:'center'},minColCount:{value:1},effect:{value:{effect:"fadeIn",duration:1}},colWidth:{},adjustEffect:{}};function doResize(){var self=this,colWidth=self.get('colWidth'),container=self.get('container'),containerRegion=self._containerRegion||{};if(S.isFunction(colWidth)){colWidth=colWidth(self);}
if(!container[0].offsetWidth||self._colWidth===colWidth&&container.width()===containerRegion.width){return}
self._colWidth=colWidth;self.adjust();}
function recalculate(){var self=this,container=self.get("container"),containerWidth=container.width(),curColHeights=self._curColHeights||[];self._curColHeights=curColHeights;curColHeights.length=Math.max(Math.floor(containerWidth/self._colWidth),self.get("minColCount"));self._containerRegion={width:containerWidth};S.each(curColHeights,function(v,i){curColHeights[i]=0;});self._colItems=[];}
function adjustItemAction(self,add,itemRaw,callback){var effect=self.get("effect"),item=$(itemRaw),align=self.get("align"),margin,curColHeights=self._curColHeights,container=self.get("container"),colWidth=self._colWidth,curColCount=curColHeights.length,col=0,colProp,containerRegion=self._containerRegion,guard=Number['MAX_VALUE'];if(!curColCount){return undefined;}
if(item.hasClass("ks-waterfall-fixed-left")){col=0;}else if(item.hasClass("ks-waterfall-fixed-right")){col=curColCount>0?curColCount-1:0;}else{for(var i=0;i<curColCount;i++){if(curColHeights[i]<guard){guard=curColHeights[i];col=i;}}}
margin=align==='left'?0:Math.max(containerRegion.width-curColCount*colWidth,0);if(align==='center'){margin/=2;}
if(align==='justify'&&curColCount>1){margin=col>0?Math.max((containerRegion.width-colWidth)/(curColCount-1)-colWidth,0)*col:0;}
colProp={left:col*colWidth+margin,top:curColHeights[col]};function end(ifNotCall){curColHeights[col]+=item.outerHeight(true);var colItems=self._colItems;colItems[col]=colItems[col]||[];colItems[col].push(item);item.attr("data-waterfall-col",col);var className=item[0].className.replace(/\s*ks-waterfall-col-(?:first|last|\d+)/g,"");className+=" ks-waterfall-col-"+col;if(col==0){className+=" ks-waterfall-col-first";}else if(col==curColHeights.length-1){className+=" ks-waterfall-col-last";}
item[0].className=className;if(!ifNotCall){callback&&callback();}}
if(add){item.css(colProp);if(effect&&effect.effect){item.css("visibility","hidden");}
container.append(item);end();}
else{var adjustEffect=self.get("adjustEffect");if(adjustEffect){end(1);item.animate(colProp,adjustEffect.duration,adjustEffect.easing,callback);}else{item.css(colProp);end();}}
return item;}
function addItem(itemRaw){var self=this,item=adjustItemAction(self,true,itemRaw),effect=self.get("effect");if(item&&effect&&effect.effect){item.hide();item.css("visibility","");item[effect.effect](effect.duration,0,effect.easing);}}
S.extend(Waterfall,Base,{isAdjusting:function(){return!!this._adjuster;},'isAdding':function(){return!!this._adder;},adjustItem:function(item,cfg){var self=this;cfg=cfg||{};if(self.isAdjusting()){return undefined;}
var originalOuterHeight=item['outerHeight'](true),outerHeight;if(cfg.process){outerHeight=cfg.process.call(self);}
if(outerHeight===undefined){outerHeight=item['outerHeight'](true);}
var diff=outerHeight-originalOuterHeight,curColHeights=self._curColHeights,col=parseInt(item['attr']("data-waterfall-col")),colItems=self._colItems[col],items=[],original=Math.max.apply(Math,curColHeights),now;for(var i=0;i<colItems.length;i++){if(colItems[i][0]===item[0]){break;}}
i++;while(i<colItems.length){items.push(colItems[i]);i++;}
curColHeights[col]+=diff;now=Math.max.apply(Math,curColHeights);if(now!=original){self.get("container").height(now);}
var effect=cfg.effect,num=items.length;if(!num){return cfg.callback&&cfg.callback.call(self);}
function check(){num--;if(num<=0){self._adjuster=0;cfg.callback&&cfg.callback.call(self);}}
if(effect===undefined){effect=self.get("adjustEffect");}
self._adjuster=timedChunk(items,function(item){if(effect){item.animate({top:parseInt(item.css("top"))+diff},effect.duration,effect.easing,check);}else{item.css("top",parseInt(item.css("top"))+diff);check();}});self._adjuster.start();return self._adjuster;},removeItem:function(item,cfg){cfg=cfg||{};var self=this,callback=cfg.callback;self.adjustItem(item,S.mix(cfg,{process:function(){item['remove']();return 0;},callback:function(){var col=parseInt(item['attr']("data-waterfall-col")),colItems=self._colItems[col];for(var i=0;i<colItems.length;i++){if(colItems[i][0]==item[0]){colItems.splice(i,1);break;}}
callback&&callback();}}));},adjust:function(callback){S.log("waterfall:adjust");var self=this,items=self.get("container").all(".ks-waterfall");if(self.isAdjusting()){self._adjuster.stop();self._adjuster=0;}
recalculate.call(self);var num=items.length;function check(){num--;if(num<=0){self.get("container").height(Math.max.apply(Math,self._curColHeights));self._adjuster=0;callback&&callback.call(self);self.fire('adjustComplete',{items:items});}}
if(!num){return callback&&callback.call(self);}
self._adjuster=timedChunk(items,function(item){adjustItemAction(self,false,item,check);});self._adjuster.start();return self._adjuster;},addItems:function(items,callback){var self=this;self._adder=timedChunk(items,addItem,self,function(){self.get("container").height(Math.max.apply(Math,self._curColHeights));self._adder=0;callback&&callback.call(self);self.fire('addComplete',{items:items});});self._adder.start();return self._adder;},destroy:function(){var self=this;var onResize=self.__onResize;$(win).detach("resize",onResize);onResize.stop();S.log('waterfall is destroyed!');self.fire('destroy');self.__destroyed=1;}});return Waterfall;},{requires:['node','base']});